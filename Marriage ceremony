#include<bits/stdc++.h>
using namespace std;

int profit[17][17];
int dp[17][1 << 17];
int batao(int curr, int mask, int n)
{
	if (curr == n)return 0;
	if (dp[curr][mask] != -1)return dp[curr][mask];
	for (int i = 0; i < n; i ++)
	{
		if (mask & (1 << i))
			dp[curr][mask] = max(dp[curr][mask], profit[i][curr] + batao(curr + 1, mask ^ (1 << i), n));
	}
	return dp[curr][mask];
}


int32_t main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  int t; cin >> t;
	for (int T = 1; T <= t; T++)
	{
		memset(dp, -1, sizeof dp);
		int n; cin >> n;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				cin >> profit[i][j];
			}
		}
		cout << "Case " << T << ": " << batao(0, (1 << n) - 1, n) << endl;
	}
	return 0;
}
